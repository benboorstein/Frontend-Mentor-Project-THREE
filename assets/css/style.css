/*
"Be aware of the many CSS selectors available: https://www.w3schools.com/cssref/css_selectors.asp.
That way, you can intuitively pick the right one for any context...eventually."
*/


/************************************************************
********** For Mobile/Narrow Viewport **********
************************************************************/

/* Remember I worked with FEM's mobile demo at zoom 15. */

html, body {
    margin: 0;
    padding: 0;
}

body {
    font-family: Barlow;
}

/* The big gray shape in the upper-right quadrant. */
body::after {
    content: '';
    position: absolute; /* Absolute positioning so as not to affect the content flow of the document. */
    top: 0;
    right: 0;
    width: 50%;
    height: 490px;
    background-color: hsl(207, 33%, 95%);
    border-bottom-left-radius: 60px;
    z-index: -1; /* Note that putting this here still doesn't get this content "under"/"behind" the background image, so reference below CSS code on ".for-background-image" to see what I did. */
}

.for-background-image {
/*
I made this <div> (and class) exclusively for this background image.
I did so because the background image needs to be 1) below "body::after" and 2) not part of <header>.
    - On (1): When I tried putting the background image on <body>, all the "body::after" content was "on top of"/"in front of" this background image. And from my research, it seems there is definitively no way to give a background image a z-index.
    - On (2): <header> is too short in height for the background image, and I can't make it longer because I want to avoid setting an actual height on <header>. The background image is meant to be big enough that it "crosses over" many elements.
*/
    background:
        url("../../assets/img/illustration-devices.svg")
            no-repeat
            scroll
            10px 95px / 579.3px 280px;
}

/****************************************
header
****************************************/

header {
    position: relative; /* Note that this is here so that "position: absolute;" can be put on <ul> (a child of <header>), and that's needed so that the menu appearing and being minimized doesn't have any effect on the spacing/positioning of the rest of the page. */
    text-transform: uppercase;
    font-family: 'Barlow Condensed'; /* Note that even though this font is written in style-guide.md as "[Barlow Condensed]", it does need quotes around it when referenced in the CSS. Sometimes a browser understands without the quotes, but the proper way to reference a two word font name is to include the quotes. */
    font-weight: 700;
    font-size: 20px;
    letter-spacing: 1px;
}

.top-images {
    display: flex;
    justify-content: space-between;
    margin: 44px 37px 0 37px;
}

.logo {
    width: 27px;
    height: 27px; 
}

header button {
    align-self: center;
    cursor: pointer;
    padding: 0;
    margin: 0;
    border-width: 0;
}

/* This is here to remove the default outline that appears upon clicking the button. But removing this causes a problem: It also removes the line that appears (and should appear, for accessibility reasons) when the button is found with "tab". So there needs to be a visual indication of when the button is tabbed on. To solve this, there's ":focus-visible" (used just below). Reference this for more info on ":focus-visible" if needed: https://css-tricks.com/almanac/selectors/f/focus-visible/. */
header button:focus {
    outline: none;
}

header button:focus-visible {
    border: 2px solid black; /* I made this a "border" instead of an "outline" just so that I could give it a border-radius (there's no way to create a similar effect, I believe, with outline). */
    border-radius: 5px;
}

.icon-hamburger {
    width: 29px;  
    height: 19.3px;
}

.menu-items {
    position: absolute;
    top: 49px;
    right: 36px;
    bottom: auto;
    left: 36px;
    padding: 0;
    list-style-type: none;
    text-align: center;
    background-color: white;
    border-radius: 4px;
    padding: 28px;
    box-shadow:
        /* top */
            -3.5px -7px 6px -7px rgba(91, 95, 113, 0.1),
        /* left: */
            -5px 6px 20px 2px rgba(91, 95, 113, 0.1),
        /* right: */
            3px 6px 12px 2px rgba(91, 95, 113, 0.1),
        /* bottom and left: */
            -11px 36px 35px 0px rgba(91, 95, 113, 0.1),
        /* bottom-left: */
            -129px 133px 20px -128px rgba(0, 0, 0, 0.2);
}

.is-hidden {
    display: none; /* NOTE: Setting this is preferable to "visibility: hidden" for a program, because, if you use the latter instead, then when the menu is hidden and the user is tabbing through the page, there will be several tabs that are "lost"/invisible. */
}

li a {
    color: inherit;
    text-decoration: inherit;
}

.menu-items li:nth-of-type(1) {
    margin-bottom: 29px;
}

.menu-items li:nth-of-type(2) {
    margin-bottom: 29px;
}

/*Making a line without any HTML (e.g., <hr>) for it.*/
.menu-items li:nth-of-type(3)::after {
    cursor: auto;
    content: '';
    display: block;
    border-bottom: 1px solid #dee3eb; /* None of their provided colors matched their demo, so I found this one. */ 
    margin-top: 28px;
}

.menu-items li:last-child {
    color: hsl(231, 7%, 65%);
    margin-top: 28px;
}

/****************************************
main
****************************************/

main {
    margin-top: 453px;
    margin-left: 35px;
}

h1 {
    margin: 0;
    margin-bottom: 22px;
    text-transform: uppercase;
    font-family: 'Barlow Condensed';
    font-weight: 700;
    font-size: 17px;
}

h1 span:nth-of-type(1) {
    text-align: center;
    color: white;
    background-color: black;
    padding: 3px 12px 4px 12px;
    border-radius: 50px;
    margin-right: 15px;
    letter-spacing: 1px;
}

h1 span:nth-of-type(2) {
    color: hsl(231, 7%, 65%);
    letter-spacing: 4px;
    font-weight: 400;
}

h2 {
    margin: 0;
    margin-bottom: 20px;
    text-transform: uppercase;
    font-family: 'Barlow Condensed';
    font-weight: 700;
    font-size: 46px;
    line-height: 1;
}

main p:nth-of-type(1) {
    color: hsl(230, 11%, 40%);
    margin: 0;
    margin-bottom: 33px;
    font-size: 21px;
    font-weight: 400; /* Question: I was able to make this "700". How was this able to work, given I don't have access to Barlow 700? Answer: The browser is guessing and being smart in this case. */
}

main p:nth-of-type(2) {
    color: hsl(231, 7%, 65%);
    margin: 0;
    margin-bottom: 95px;
    text-transform: uppercase;
    font-family: 'Barlow Condensed';
    font-size: 16px;
    font-weight: 400;
    letter-spacing: 2px;
}

main button {
    color: hsl(207, 33%, 95%);
    background-color: hsl(0, 100%, 68%);
    border-radius: 6px;
    border-width: 0;
    outline: none;
    padding: 13px 27px 13px 27px;
    cursor: pointer;
    text-transform: uppercase;
    font-family: 'Barlow Condensed';
    font-weight: 700;
    font-size: 16px;
    letter-spacing: 1px;
    margin-right: 17px;
}

main button:active, main button:focus {
    opacity: 0.7;
}

/****************************************
footer
****************************************/

.attribution {
    margin: 0;
    margin-bottom: 6px;
    text-align: center;
    font-size: 11px;
}

.attribution a {
    color: hsl(228, 45%, 44%); /*hsl(hue, saturation, lightness)*/
}

/************************************************************
********** For Desktop/Wide Viewport **********
************************************************************/

@media screen and (min-width: 850px) { /* starting at width of 850px, the code below (which is only for CHANGES to the above code) will take effect. */

    body::after {
        width: 660px;
        height: 345px;
    }

    .for-background-image {
        background:
            url("../../assets/img/illustration-devices.svg")
                no-repeat
                scroll
                725px 149px / 827.6px 400px;
    }

    /****************************************
    header
    ****************************************/

    header {
        font-size: 13px;
        display: flex;
        justify-content: space-between;
        margin-top: 8px;
    }

    .top-images {
        margin-left: 166px;
    }

    header button {
        display: none;
    }

    .icon-hamburger {
        display: none;
    }

    .icon-close-menu {
        display: none;
    }

    .menu-items {
        position: relative;
        align-self: center;
        padding: 0;
        text-align: left;
        background-color: hsl(207, 33%, 95%);
        border-radius: none;
        box-shadow: none;
        margin: 0px 195px 49px 0;
        display: flex;
        justify-content: space-evenly;
    }

    li a:focus {
        text-decoration: underline black;
    }

    .menu-items li:nth-of-type(1) {
        margin: 0;
        margin-right: 38px;
    }

    .menu-items li:nth-of-type(1):active {
        text-decoration: underline;
    }
    
    .menu-items li:nth-of-type(2) {
        margin: 0;
        margin-right: 38px;
    }

    .menu-items li:nth-of-type(2):active {
        text-decoration: underline;
    }
    
    .menu-items li:nth-of-type(3) {
        margin: 0;
        display: flex; /* This is here because ".menu-items li:nth-of-type(3)::after" just below acts as a child of ".menu-items li:nth-of-type(3)". */
        margin-right: 38px;
    }

    .menu-items li:nth-of-type(3):active {
        text-decoration: underline;
    }

    /*Making a bullet point without any HTML for it.*/
    .menu-items li:nth-of-type(3)::after {
        border: none;
        margin: 0;
        align-self: center;
        background-color: #ccd0d7; /* None of their provided colors matched their demo, so I found this one. */
        width: 6px;
        height: 6px;
        border-radius: 50%;
        margin-left: 38px;
    }

    .menu-items li:last-child {
        margin: 0;
    }

    .menu-items li:last-child:active {
        text-decoration: underline;
    }

    /****************************************
    main
    ****************************************/

    main {
        margin-top: 117px;
        margin-left: 164px;
    }

    h1 {
        margin-bottom: 20px;
        font-size: 13px;
    }

    h1 span:nth-of-type(1) {
        padding: 2px 9px 3px 9px;
        border-radius: 52px;
    }

    h2 {
        margin-bottom: 30px;
        font-size: 54px;
        max-width: 34%; /* This is a good way of getting this element's text's line break in the right place (so it matches that of the FEM demo). */
    }

    main p:nth-of-type(1) {
        margin-bottom: 60px;
        font-size: 15px;
        max-width: 20%; /* This is a good way of getting this element's text's line break in the right place (so it matches that of the FEM demo). */
    }

    main p:nth-of-type(2) {
        font-size: 13px;
        letter-spacing: 4px;
    }

    main button {
        padding: 12px 27px 12px 27px;
        font-size: 13px;
    }

    /****************************************
    footer
    ****************************************/

    .attribution {
        margin: 0;
        font-size: 12px;
    }
}











/* KEEP THIS AS A REFERENCE:
parent {
    display: flex;    mandatory 
    flex-direction: ;    row (default) | row-reverse | column | column-reverse 
    justify-content: ;    flex-start (default) | flex-end | center | space-between | space-around | space-evenly 
    align-items: ;    flex-start | flex-end | center | (baseline) | stretch (default) 
    flex-wrap: ;    nowrap (default) | wrap | wrap-reverse 
    align-content: ;    flex-start | flex-end | center | space-between | space-around | stretch (default) 
}

child {
    align-self: ;    flex-start | flex-end | center | (baseline) | stretch (default)
    flex-grow: ;    0 is default 
    flex-shrink: ;    1 is default 
    flex-basis: ;    auto is default 
    order: ;    0 is default 
}
*/